const path = require('path');
const CircularDependencyPlugin = require('circular-dependency-plugin')

module.exports = {
    entry: path.resolve(__dirname, 'src') + '/index.js',
    target: 'web',
    devtool: 'source-map',
    output: {
        path: path.resolve(__dirname, 'lib'),
        filename: 'audicom.js',
        library: 'audicom',
        libraryTarget: 'umd',
        umdNamedDefine: true
    },
    mode: "production",
    plugins: [
        new CircularDependencyPlugin({
            // `onStart` is called before the cycle detection starts
            onStart({ compilation }) {
                console.log('start detecting webpack modules cycles');
            },
            // `onDetected` is called for each module that is cyclical
            onDetected({ module: webpackModuleRecord, paths, compilation }) {
                // `paths` will be an Array of the relative module paths that make up the cycle
                // `module` will be the module record generated by webpack that caused the cycle
                compilation.warnings.push(new Error(paths.join(' -> ')))
            },
            // `onEnd` is called before the cycle detection ends
            onEnd({ compilation }) {
                console.log('end detecting webpack modules cycles');
            },
        })
    ],
    module: {
        rules: [
            {
                test: /src\/.*\.js$/,
                exclude: /(node_modules|bower_components)/,
                use: {
                    loader: 'babel-loader',
                    options: {
                        presets: ['@babel/preset-flow'], // es2015', 'stage-0', 'react
                        plugins: [
                            '@babel/plugin-proposal-class-properties',
                        ]
                    }
                }
            }
        ]
    }
};